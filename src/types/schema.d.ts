/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/verify/id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["verifyLoginId"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ticket/reservations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 예매 API
         * @description 예매 완료 후 보여지는 예매 내역 페이지
         */
        post: operations["reserve"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ticket/pay": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["readyForKakaoPay"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["join"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/contents/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["searchPerformance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/contents/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 공연 등록 API
         * @description 공연을 등록할 수 있다.
         */
        post: operations["createPerformance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/authorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["authorize"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pay/approve": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["approveForKakaoPay"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["login_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deleteUser"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ReservationCreateRequestDto: {
            /** Format: int64 */
            performanceScheduleId: number;
            /** Format: int32 */
            quantity: number;
            /** @enum {string} */
            seatType: "VIP" | "STANDARD";
        };
        ReservationCreateResponseDto: {
            performanceTitle?: string;
            reservationNumber?: string;
            /** @enum {string} */
            reservationStatus?: "PENDING" | "CANCELED" | "PAID" | "RESERVED";
            /** Format: date */
            performanceDate?: string;
            /** Format: date-time */
            reservationDate?: string;
            /** Format: int64 */
            totalAmount?: number;
            /** Format: int32 */
            quantity?: number;
            username?: string;
            phoneNumber?: string;
            email?: string;
        };
        KakaoPayReadyRequestDto: {
            orderId?: string;
            /** Format: int64 */
            userId?: number;
            itemName?: string;
            /** Format: int32 */
            quantity?: number;
            /** Format: int64 */
            totalAmount?: number;
        };
        KakaoPayReadyResponseDto: {
            tid?: string;
            next_redirect_app_url?: string;
            next_redirect_mobile_url?: string;
            next_redirect_pc_url?: string;
            android_app_scheme?: string;
            ios_app_scheme?: string;
            /** Format: date-time */
            created_at?: string;
        };
        UserCreateRequestDto: {
            loginId: string;
            password: string;
            username: string;
            email?: string;
            /** Format: date */
            birth?: string;
            phoneNumber: string;
        };
        UserCreateResponseDto: {
            /** Format: int64 */
            id?: number;
            loginId?: string;
            username?: string;
        };
        LoginRequestDto: {
            loginId?: string;
            password?: string;
        };
        TokenResponse: {
            accessToken?: string;
            refreshToken?: string;
        };
        PerformanceSearchRequestDto: {
            keyword: string;
        };
        PerformanceSearchResponseDto: {
            keyword?: string;
            title?: string;
            location?: string;
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
        };
        LocalTime: {
            /** Format: int32 */
            hour?: number;
            /** Format: int32 */
            minute?: number;
            /** Format: int32 */
            second?: number;
            /** Format: int32 */
            nano?: number;
        };
        PerformanceCreateRequestDto: {
            title: string;
            /** Format: date */
            startDate: string;
            /** Format: date */
            endDate: string;
            /** Format: int32 */
            runningTime?: number;
            /** @enum {string} */
            genre: "CONCERT" | "MUSICAL" | "FESTIVAL" | "SPORTS";
            location: string;
            schedules?: components["schemas"]["PerformanceScheduleDto"][];
            seatConfig?: components["schemas"]["SeatCreateDto"];
        };
        PerformanceScheduleDto: {
            /** Format: date */
            performanceDate?: string;
            startTime?: components["schemas"]["LocalTime"];
        };
        SeatCreateDto: {
            zoneSeatNumber?: {
                [key: string]: number;
            };
            zoneType?: {
                [key: string]: "VIP" | "STANDARD";
            };
            typePrice?: {
                [key: string]: number;
            };
        };
        PerformanceCreateResponseDto: {
            /** Format: int64 */
            performanceId?: number;
            title?: string;
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: int32 */
            runningTime?: number;
            /** @enum {string} */
            genre?: "CONCERT" | "MUSICAL" | "FESTIVAL" | "SPORTS";
            location?: string;
            performanceSchedule?: components["schemas"]["PerformanceScheduleDto"][];
            totalSeatNumber?: {
                [key: string]: number;
            };
        };
        KakaoLoginRequestDto: {
            code?: string;
            error?: string;
            error_description?: string;
            state?: string;
        };
        Amount: {
            /** Format: int32 */
            total?: number;
            /** Format: int32 */
            tax_free?: number;
            /** Format: int32 */
            vat?: number;
            /** Format: int32 */
            point?: number;
            /** Format: int32 */
            discount?: number;
            /** Format: int32 */
            green_deposit?: number;
        };
        CardInfo: {
            kakaopay_purchase_corp?: string;
            kakaopay_purchase_corp_code?: string;
            kakaopay_issuer_corp?: string;
            kakaopay_issuer_corp_code?: string;
            bin?: string;
            card_type?: string;
            install_month?: string;
            approved_id?: string;
            card_mid?: string;
            interest_free_install?: string;
            installment_type?: string;
            card_item_code?: string;
        };
        KakaoPayApproveResponseDto: {
            aid?: string;
            tid?: string;
            cid?: string;
            sid?: string;
            partner_order_id?: string;
            partner_user_id?: string;
            payment_method_type?: string;
            amount?: components["schemas"]["Amount"];
            card_info?: components["schemas"]["CardInfo"];
            item_name?: string;
            item_code?: string;
            /** Format: int32 */
            quantity?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            approved_at?: string;
            payload?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    verifyLoginId: {
        parameters: {
            query: {
                loginId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        [key: string]: boolean;
                    };
                };
            };
        };
    };
    reserve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReservationCreateRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ReservationCreateResponseDto"];
                };
            };
        };
    };
    readyForKakaoPay: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["KakaoPayReadyRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["KakaoPayReadyResponseDto"];
                };
            };
        };
    };
    join: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreateRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserCreateResponseDto"];
                };
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["TokenResponse"];
                };
            };
        };
    };
    searchPerformance: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PerformanceSearchRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PerformanceSearchResponseDto"][];
                };
            };
        };
    };
    createPerformance: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PerformanceCreateRequestDto"];
            };
        };
        responses: {
            /** @description 공연 등록 성공 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PerformanceCreateResponseDto"];
                };
            };
            /** @description 공연 등록 실패 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PerformanceCreateResponseDto"];
                };
            };
        };
    };
    authorize: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["KakaoLoginRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    approveForKakaoPay: {
        parameters: {
            query: {
                order_id: string;
                user_id: number;
                pg_token: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["KakaoPayApproveResponseDto"];
                };
            };
        };
    };
    login_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteUser: {
        parameters: {
            query: {
                password: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
